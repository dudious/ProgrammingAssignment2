install.packages("slidify")
source("http://bioconductor.org/biocLite.R")biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite
biocLite()
biocLite(c("GenomicsFeatures", "AnnotationDbi"))
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
install.packages("KernSMooth")
install.packages("KernSmooth")
load (KalmanSmooth)
library (KernSmooth)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
f(5)
g(3)
g <- function(y) {
y + z
}
g(3)
f(3)
z<-4
g3
f(3)
z<-4
g(3)
c<-5
y <- if(c < 3) {
NA
} else {
10
}
y(x)
y
setwd("C:/Users/Wout/gitwork/ProgrammingAssignment2")
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix (5,5)
m <-NULL
source('~/.active-rstudio-document')
makeVector ()
makeVector (vect)
makeVector ("vect"")
makeVector ("vect")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
set (10)
set (10,5,2)
set (c(10,5,2)
set (c(10,5,2))
set (c(10,5,2))
source('~/.active-rstudio-document')
set (c(10,5,2))
set <- function(y) {
x <<- y
m <<- NULL
{}
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
makeVector (4)
function() x
function()
function() x
x <- c(1,2,3)
function() x
function() x
function() y
function() z
x$function() x
a <- makeVector()
a <- makeVector(1;7)
a <- makeVector(1:7)
source('~/.active-rstudio-document')
a <- makeVector(1:7)
source('~/.active-rstudio-document')
a <- makeVector(1:7)
a$set(c(1,2,3,4,5,6,7))
a$get()
cachemean (a)
m
getmean ()
getmean (a)
source('~/.active-rstudio-document')
flor <- makeVerctor()
flor <- makeVector()
flor$set (1,2,3,4,5,6,7)
flor$set (c(1,2,3,4,5,6,7)
flor$set (c(1,2,3,4,5,6,7))
flor$get
flor$get ()
flor$setmean (flor$get ())
flor$setmean (mean(flor$get ()))
flor$getmean ()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
flor <- makeVerctor()
flor <- makeVector()
flor$set (c(1,2,3,4,5,6,7))
flor$setmean (mean(flor$get ()))
flor$getmean ()
m
wout <- makeVector()
wout$set (5:20)
wout$setmean (mean(wout$get ()))
wout$getmean ()
source('~/.active-rstudio-document')
flor$set (c(1,2,3,4,5,6,7))
flor <- makeVector()
source('~/.active-rstudio-document')
flor <- makeVector()
wout <- makeVector()
flor$set (c(1,2,3,4,5,6,7))
wout$set ((:20)
wout$set (5:20)
wout$setmean (mean(wout$get ()))
flor$setmean (mean(flor$get ()))
flor$getmean
flor$getmean ()
wout$getmean ()
lol <- 17
return (lol)
return ("lol")
lol
message("getting cached data")
source('~/.active-rstudio-document')
wout <- makeCacheMatrix ()
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
wout <- makeCacheMatrix ()
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
wout <- makeCacheMatrix ()
mat <- matrix (1:25)
mat
mat <- matrix (5,5,1:25)
mat
mat <- as.matrix (1:25)
mat
mat <- matrix (1:25,5,5)
mat
View(mat)
solve (mat)
solve (mat,...)
mat <- matrix (25:50,5,5)
mat <- matrix (24:50,5,5)
mat <- matrix (26:50,5,5)
solve (mat,...)
solve (mat)
mat <- matrix (rnorm(25),5,5)
mat
solve (mat)
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
Wout <- makeCachedMatrix (mat)
cacheSolve (Wout)
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
cacheSolve (Wout)
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Wout/gitwork/ProgrammingAssignment2/cachematrix.R')
Wout <- makeCachedMatrix (mat)
cacheSolve (Wout)
mat <- matrix (rnorm(25),5,5)
Wout <- makeCachedMatrix (mat)
cacheSolve (Wout)
solve (mat)
cacheSolve (Wout)
